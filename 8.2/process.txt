To implement the digest access authentication we will need to do a couple of things:

First the server needs to check if we have digest, if we don't we need to request the user to login (the authentication form).

When we create the authentication popup we need to calculate 2 different values attached to it.
1. nonce - This value will be used by the client to generate a hash to send back to the server. This value should be unique for each request.
2. opaque - This string will be generated by the server and is expected to be sent and returned by the client unaltered. This can also be used as a "session_id" because if we change this value the user will be Unauthorized.
We will also provide a realm value, this is used to know which username and password the user should provide and is also used by the client to generate a hash to send back to the server.

With all of these values we can compose the header: header(sprintf('WWW-Authenticate: Digest realm="%s", nonce="%s", opaque="%s"', $realm, $nonce, $opaque));

When the user submits the authentication form the username and password gets hashed and can't be seen in plain text (if we use wireshark/packet sniffer) we need parse the digest when we receive the form data and save the following information into variables:
$URI = $digest_parse['uri'];
- authentication uri.

$request_method = $_SERVER['REQUEST_METHOD'];

$nonce = $digest_parse['nonce'];
- same as server response.

$nc = $digest_parse['nc'];
- nonce count, this is a hexadecimal serial number for the request. This should increase by 1 for every request.

$cnonce = $digest_parse['cnonce'];
- unique id generated by the client.

$qop = $digest_parse['qop'];
- same as server response.

$response = $digest_parse['response'];
- The validation hash used when we want to authenticate.

With these variables we can compute the hash value that we will compare with the response hash. If the response hash is the same as the new computed hash we will have valid credentials.

The formula that will be used to compute the response will be the following (RFC 2617 digest access authentication):
1. A1 = MD5(username:realm:password)
2. A2 = MD5(method: digestURI)
3. response = MD5(A1:nonce:nonceCount:cnonce:qop:A2)

When the authentication form is posted from the client (WWW-Authenticate) this is the same process that happens.

With the calculated response hash compared to the response hash from the digest we can see if they match. This means the input from the submitted form (username and password) matches the username and password of the valid user credentials.

As we can see we use MD5 (hash algorithm). This is an improvement from the basic authentication where we use Base64 which can be deciphered without a problem.

With the digest response being hashed we can use (A1 & A2 and nonceCount:cnonce:qop) to compute a hash that should be the same as the digest response if we entered the right username and password. This is almost impossible to reverse engineer and makes it safer to use for authentication.
